#include "zcommon.acs"
#include "cutscene.acsh"

// fadein and fadeout in tics - TODO
/* #define FADE_IN_TIME	35
#define FADE_OUT_TIME	35

bool fading = FALSE; */

bool playing; // 0 by default
int skip_buttons;

script "skip_text" (void)
{
	while(TRUE) {
		HudMessage(l:"XENOTOMB_SKIP_CUTSCENE"; HUDMSG_PLAIN, 0, CR_WHITE, 0, 0, 0.9, 0.1, 1.0);
		Delay(30);
	}
}

script "begin_cutscene" (void)
{
	GiveInventory("CutsceneMode", 1); // hide STBAR
	ACS_NamedExecute("skip_text", 0);
	
	while(TRUE) {
		if(!cs_is_playing()) {
			// Log(s:"Scripted ended through cs_end_cutscene().");
			terminate; // ended naturally so stop the script
		}
		
		if(cs_skipped()) {
			// Log(s:"Script skipped by player.");
			cs_end_cutscene();
			terminate; // skipped so cleanup
		}
		
		Delay(1);
	}
}

function void cs_begin_cutscene(void)
{
	playing = TRUE;
	// Log(s:"Cutscene started.");
	ACS_NamedExecute("begin_cutscene", 0);
}

function void cs_end_cutscene(void)
{
	// Log(s:"Cutscene ended.");
	ACS_NamedTerminate("skip_text", 0);
	TakeInventory("CutsceneMode", 1); // show STBAR
	playing = FALSE;
}

function bool cs_skipped(void)
{
	int input = GetPlayerInput(-1, INPUT_BUTTONS);
	int oldinput = GetPlayerInput(-1, INPUT_OLDBUTTONS);
	
	// Log(s:"input: ", i:input, s:", oldinput: ", i:oldinput, s:", skip_buttons: ", i:skip_buttons);
	
	return (input & skip_buttons) && !(oldinput & skip_buttons);
}

function bool cs_is_playing(void)
{
	return playing;
}

function bool cs_is_fading(void) // todo
{
	return FALSE;
}

function void cs_set_skip_buttons(int buttons) // buttons that skip the cutscene
{
	skip_buttons = buttons;
}
